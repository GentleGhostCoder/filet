[tool.poetry]
name = "filet"
version = "0.0.2"  # <<FORCE_BUMP>>
description = "Generate / Analyze schemas for various file formats."
authors = ["Semjon Geist <mail@semjon-geist.de>"]
license = "GNU GPLv3"
readme = "README.md"
homepage = "https://github.com/GentleGhostCoder/filet"
repository = "https://github.com/GentleGhostCoder/filet.git"
documentation = "https://github.com/GentleGhostCoder/filet"
packages = [
    { include = "filet"}
]
classifiers = [
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
urllib3 = {version = "^1.26.5"}
pydantic = "^2.0"
boto3 = "^1.34.29"
pydantic-settings = "^2.1.0"
typer = {extras = ["all"], version = "^0.9.0"}
trino = {extras = ["sqlalchemy"], version = "^0.327.0"}
sqlitedict = "^2.1.0"
pandas = "^2.2.0"
pyarrow = "^15.0.0"
nest-asyncio = "^1.6.0"
uvloop = "^0.19.0"
python-gnupg = "^0.5.2"
packaging = "^23.2"
prompt-toolkit = "^3.0.43"
orjson = "^3.9.15"
avro = "^1.11.3"
pyyaml = "^6.0.1"


[tool.poetry.group.dev.dependencies]
pytype = {version = "2023.9.19", python = "<3.11,>=3.8"}
pytest = ">= 7.3.1"
coverage-badge = "^1.1.0"
coverage = {extras = ["toml"], version = ">=7.3.0"}
safety = ">=2.3.5"
typeguard = ">=4.1.3"
xdoctest = {extras = ["colors"], version = ">=1.1.1"}
sphinx = ">=7.1.2"
sphinx-autobuild = ">=2021.3.14"
pre-commit = ">=3.3.3"
black = ">=22.12.0"
pep8-naming = ">=0.11.1"
pre-commit-hooks = ">=4.4.0"
sphinx-rtd-theme = ">=1.3.0"
sphinx-click = ">=5.0.1"
Pygments = ">=2.16.1"
sphinx-rtd-dark-mode = ">=1.2.4"
sphinx-automodapi = ">=0.16.0"
Jinja2 = ">=3.1.2"
mypy = ">=1.5.1"
pyupgrade = ">=3.8.0"
myst_parser = ">=2.0.0"
breathe = ">=4.35.0"
Cython  = ">=3.0.2"
setuptools = "^68.2.2"
ninja = ">=1.11.1"
nox = "^2023.4.22"
nox-poetry = "^1.0.3"
isort = "^5.12.0"
virtualenv = "^20.24.5"
pybind11 = "^2.11.1"
clang-format = "^16.0.6"
clang-tidy = "^15.0.2.1"
cpplint = "^1.6.1"
boto3-stubs = {extras = ["s3"], version = "^1.34.34"}
types-pyyaml = "^6.0.12.12"


[tool.poetry.scripts]
filet = "filet.__main__:main"

[tool.black]
line-length = 120
skip-string-normalization = false

[tool.ruff]
line-length = 120
exclude =[".git","__pycache__","docs/source/conf.py,build*","dist/*",".venv","ext/*","setup*","tests/*","cmake-build-debug*"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint]
extend-select = [
    "B",           # flake8-bugbear
    "I",           # isort
    "ARG",         # flake8-unused-arguments
    "C4",          # flake8-comprehensions
    "EM",          # flake8-errmsg
    "ICN",         # flake8-import-conventions
    "G",           # flake8-logging-format
    "PGH",         # pygrep-hooks
    "PIE",         # flake8-pie
    "PL",          # pylint
    "PT",          # flake8-pytest-style
    "PTH",         # flake8-use-pathlib
    "RET",         # flake8-return
    "RUF",         # Ruff-specific
    "SIM",         # flake8-simplify
    "T20",         # flake8-print
    "UP",          # pyupgrade
    "YTT",         # flake8-2020
    "EXE",         # flake8-executable
    "NPY",         # NumPy specific rules
    "PD",          # pandas-vet
]
ignore = [
    "PLR09",    # Too many X
    "PLR2004",  # Magic comparison
]
#ignore = ["E501","D100","N813"]
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]

[tool.mypy]
strict = false
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
ignore_missing_imports = true

[tool.isort]
skip = ["__init__.py", "_enforce_types.py"] # isort different behaviour on ci
force_sort_within_sections=true
multi_line_output=3
include_trailing_comma=true
balanced_wrapping=true
line_length=120
profile = "black"

[tool.coverage.paths]
source = ["*/site-packages"]

[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true

[tool.poetry.build]
script = "build.py"
generate-setup-file = true
[build-system]
requires = [
    "poetry-core>=1.0.0",
    "pybind11",
    "wheel",
    "ninja",
    "setuptools",
    "cmake>=3.12"
]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
minversion = "8.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = ["error"]
testpaths = ["tests"]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
